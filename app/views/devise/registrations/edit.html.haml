= render 'layouts/nolognav'
%h1.away-from-edge Edit Profile
= render 'layouts/error_messages', object: resource
%div.form-box
  = devise_error_messages!
  = form_for(resource, as: resource_name, url: registration_path(resource_name), html: { multipart: true }, validate: true, id: "editing-form") do |f|
    - if !@omni
      = f.text_field :username,
        :value => "#{@username}",
        :class => "new-user",
        :style => "color:#000000;background-color:white;",
        :onfocus => "if(this.value=='Username' || this.value == '#{@username}'){this.value='';this.style.color = '#000';}",
        :onblur => "if(this.value==''){this.value='#{@username}';}",
        :autocapitalize => "none"
      = f.text_field :email,
        :value => "#{@email}",
        :class => "new-user",
        :type => "email",
        :style => "color:#000000;background-color:white;",
        :onfocus => "if(this.value=='#{@email}'){this.value='';this.style.color = '#000000';}",
        :color => "white",
        :onblur => "if(this.value==''){this.value='#{@email}';this.style.color = '#000000';}",
        :autocapitalize => "none"
      = f.text_field :current_password,
        :value => "Current Password",
        :class => "new-user",
        :type => "text",
        :autocomplete => "off",
        :style => "color:#000000;background-color:white;",
        :onfocus => "if(this.value=='Current Password'){this.value='';this.style.color = '#000000';this.type='password'}",
        :onblur => "if(this.value==''){this.value='Current Password';this.type='text'}",
        :autocapitalize => "none"
      = f.text_field :password,
        :value => "New Password",
        :autocomplete => "off",
        :type => "text",
        :class => "new-user",
        :style => "color:#000000;background-color:white;",
        :onfocus => "if(this.value=='New Password'){this.value='';this.style.color = '#000000';this.type='password'}",
        :onblur => "if(this.value==''){this.value='New Password';this.style.color = '#000000';this.type='text'}",
        :autocapitalize => "none"
      = f.text_field :name,
        :value => "#{@name}",
        :class => "new-user",
        :autocomplete => "off",
        :style => "color:#000000;background-color:white;",
        :onfocus => "if(this.value=='#{@name}'){this.value='';this.style.color = '#000000';}",
        :onblur => "if(this.value==''){this.value='#{@name}'}"
      #explanation
        What to do when your profile is visited:
      = f.radio_button :playMethod, "Random", :checked => true, :id => "pm1"
      %label{:for => "pm1"} Random
      = f.radio_button :playMethod, "First", :id => "pm2"
      %label{:for => "pm2"} First
      = f.text_field :picture,
        :value => "#{@picture}",
        :class => "password-margin new-user pic-url",
        :autocomplete => "off",
        :style => "color:#000000;background-color:white;",
        :onfocus => "if(this.value=='#{@picture}'){this.value='';this.style.color = '#000000';}",
        :onblur => "if(this.value==''){this.value='#{@picture}';}"
      .nav-button.upload-picture
        Upload Profile Picture
        .invisible
          = f.file_field :image,
            :id => "pictureInput",
            :class => "big-form img-upload"
      #target
        = f.submit "Save", class: "submit-button"
    -else
      = f.text_field :username,
        :class => "new-user",
        :value => "#{@username}",
        :style => "color:#000000;background-color:white;",
        :onfocus => "if(this.value=='#{@username}'){this.value='';this.style.color = '#000000';}",
        :color => "white",
        :onblur => "if(this.value==''){this.value='#{@username}';this.style.color = '#000000';}",
        :autocapitalize => "none"
      = f.text_field :email,
        :value => "#{@email}",
        :class => "new-user",
        :type => "email",
        :style => "color:#000000;background-color:white;",
        :onfocus => "if(this.value=='#{@email}'){this.value='';this.style.color = '#000000';}",
        :color => "white",
        :onblur => "if(this.value==''){this.value='#{@email}';this.style.color = '#000000';}",
        :autocapitalize => "none"
      = f.text_field :name,
        :value => "#{@name}",
        :class => "new-user",
        :style => "color:#000000;background-color:white;",
        :onfocus => "if(this.value=='#{@name}'){this.value='';this.style.color = '#000000';}",
        :color => "white",
        :onblur => "if(this.value==''){this.value='#{@name}';this.style.color = '#000000';}"
      = f.text_field :picture,
        :value => "#{@picture}",
        :class => "password-margin new-user pic-url",
        :style => "color:#000000;background-color:white;",
        :onfocus => "if(this.value=='#{@picture}'){this.value='';this.style.color = '#000000';}",
        :color => "white",
        :onblur => "if(this.value==''){this.value='#{@picture}';this.style.color = '#000000';}"
      .nav-button.upload-picture
        Upload Profile Picture
        .invisible
          = f.file_field :image,
            :id => "pictureInput",
            :class => "big-form img-upload"
      #target
        = f.submit "Save", :class => "submit-button"
:javascript
  $(function showImage() {
    $('#pictureInput').on('change', function(event) {
      var files = event.target.files;
      var image = files[0];
      var reader = new FileReader();
      reader.onload = function(file) {
        var img = new Image();
        img.src = file.target.result;
        // $('#target').html(img);
        $('#target').css("background-image", "url(" + img.src + ")");
      }
      reader.readAsDataURL(image);
    });
  });

  $(function showPicture() {
    $('.pic-url').on('change', function(event) {
      $('#target').css("background-image", "url(" + $('.pic-url').val() + ")");
    }).change();
  });
